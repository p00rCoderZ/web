version: '3.2'
services:
  website:
    build: 
      dockerfile: Docker/Dockerfile
      context: .
    container_name: website
    hostname: website
    ports:
      - "8000:8080"
    volumes:
      - ./src:/usr/web/src
      - ./secrets.toml:/secrets.toml
    entrypoint: /bin/bash 
    tty: true
    stdin_open: true
    depends_on:
      - api
    links:
      - api
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - 'POSTGRES_USER=pros'
      - 'POSTGRES_PASSWORD=foobar'
      - 'POSTGRES_DB=kup'
    volumes:
      - ./api/Docker/schema.sql:/docker-entrypoint-initdb.d/schema.sql
  api:
    build: api/Docker
    container_name: api
    hostname: api
    ports:  
      - "7777:8000"
    volumes:
      - ./api/src:/usr/api/src
      - ./api/Docker/schema.sql:/schema.sql
      - ./secrets.toml:/secrets.toml
    depends_on:
      - postgres
    tty: true
    stdin_open: true
    entrypoint: /usr/api/src/server/server.py
    # entrypoint: /bin/bash
    links:
      - postgres
    environment:
      - 'PGHOST=postgres'
      - 'PGDATABASE=kup'
      - 'PGUSER=pros'
      - 'PGPASSWORD=foobar'